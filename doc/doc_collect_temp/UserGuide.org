#+TITLE: PlanTool Documentation
* Introduction
  Plantool wraps different planners into a python utility package. It aims to provide convenience for planning study and applications.
* Installation
* Planners
** Deterministic
   Deterministic planners
*** SGPlan
     - Usage for SGPlan: 
     #+BEGIN_SRC python
     >>> import sgplan
     >>> argv = ['sgplan', '-o', 'domain.pddl', '-f', 'problem.pddl']
     >>> sgplan.oldmain(argv)
     #+END_SRC
    
     - Instructions about arguments:

       | OPTIONS   | DESCRIPTIONS       |
       |-----------+--------------------|
       | -o <str>  | operator file name |
       | -f  <str> | fact file name     |


*** SatPlan2006
     - Usage for SATplan:  
       #+BEGIN_SRC python
       >>> import satplan  
       >>> argv=['bb','-o','domain.pddl','-f','problem.pddl','-l','5','-G','0','-C','2']  
       >>> satplan.run(argv)  
       #+END_SRC
     
     - Instructions about arguments:

       | OPTIONS     | DESCRIPTIONS                                                       |
       |-------------+--------------------------------------------------------------------|
       | -o <str>    | operator file name                                                 |
       | -f  <str>   | fact file name                                                     |
       | -p  <str>   | path for operator and fact file                                    |
       | -l  <num>   | goal layer for CNF                                                 |
       | -G <0 or 1> | (0) create CNF output or (1) build final solution                  |
       | -b  <str>   | CNF output file name                                               |
       | -t <0 or 1> | (1) CNF output includes only unary/binary clauses - others ignored |
       | -S  <str>   | Input Solution File Name (only when -G 1 is used)                  |
       | -F  <str>   | Final Output Solution File Name (only when -G 1 is used)           |
       | -V  <str>   | Variables File Name - list all variables (only when -G 1 is used)  |
       | -C          | CNF formula output (preset: -1); at layer <-l>                     |
       | 0           | none                                                               |
       | 1           | action-based                                                       |
       | 2           | gp-style action-based                                              |
       | 3           | gp-based                                                           |
       | 4           | thin gp-based                                                      |
      
   
*** HSP
    - Usage for HSP: 
      #+BEGIN_SRC python
      >>> import hsp
      >>> argv = ['hsp', '-o', 'domain.pddl', '-f', 'problem.pddl']
      >>> hsp.run(argv)
      #+END_SRC

    - Instructions about arguments:
 
      | OPTIONS   | DESCRIPTIONS                                                              |
      |-----------+---------------------------------------------------------------------------|
      | -o  <str> | operator file name                                                        |
      | -f        | <str>    fact file name                                                   |
      | -a        | <str>    Algorithm, either 'bfs' or 'gbfs'.                               |
      | -d        | <str>    Search direction, either 'forward' or 'backward'.                |
      | -h        | <str>    Heuristic function, one of 'h1plus', 'h1max', 'h2plus', 'h2max'. |
      | -v        | <num>    Verbose level >= 0 (default is 1).                               |
      | -w        | <float>   Float to weight the heuristic component of the cost             |


** Learning
** Uncertainty
  
